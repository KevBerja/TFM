version: '3.8'

services:

  keycloak:
    image: quay.io/keycloak/keycloak:19.0.3
    container_name: keycloak
    hostname: keycloak
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    ports:
      - "8080:8080"
    networks:
      - tfm-net
    volumes:
      - keycloak_data:/opt/keycloak/data
      - ./keycloak/realm-config:/opt/keycloak/data/import
    command: >
      start-dev --import-realm
    restart: on-failure

  vault:
    image: vault:1.13.1
    container_name: vault
    ports:
      - "8200:8200"
    networks:
      - tfm-net
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: root
    cap_add:
      - IPC_LOCK
    command: server -dev -dev-listen-address=0.0.0.0:8200
    restart: on-failure

  app-home:
    container_name: app-home
    hostname: app-home
    build:
      context: ./app-home
      dockerfile: Dockerfile    
    ports:
      - "8088:80"
    networks:
      - tfm-net
    restart: on-failure

  phpmyadmin:
    container_name: phpmyadmin
    hostname: phpmyadmin
    build:
      context: ./db/phpmyadmin
      dockerfile: Dockerfile
    ports:
      - "8880:80"
    networks:
      - tfm-net
    volumes:
      - phpmyadmin_data:/etc/phpmyadmin
    restart: on-failure

  db:
    container_name: mysql
    hostname: mysql
    build:
      context: ./db/mysql
      dockerfile: Dockerfile
    ports:
      - "3366:3306"
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - tfm-net
    restart: on-failure
  
  linear-regression:
    container_name: linear-regression
    hostname: linear-regression
    build:
      context: ./linear-regression
      dockerfile: Dockerfile    
    ports:
      - "5000:5000"
    networks:
      - tfm-net
    restart: on-failure

  logistic-regression:
    container_name: logistic-regression
    hostname: logistic-regression
    build:
      context: ./logistic-regression
      dockerfile: Dockerfile    
    ports:
      - "5001:5001"
    networks:
      - tfm-net
    restart: on-failure

  random-forest:
    container_name: random-forest
    hostname: random-forest
    build:
      context: ./random-forest
      dockerfile: Dockerfile    
    ports:
      - "5002:5002"
    networks:
      - tfm-net
    restart: on-failure

networks:
  tfm-net:
    driver: bridge

volumes:
  keycloak_data:
  vault_data:
  phpmyadmin_data:
  db_data: